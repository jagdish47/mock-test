// The output of code is

"Start"
"End"
"timeout"
"Promise 3 resolved"
"Promise 1 resolved"
"Promise 2 resolved"

JavaScript is handle two kind of behaviour first is Synchronous and Asynchronous in synchronous the whaever code we write it will execute line by line like inside synchronous js will run in single thread. so that's the reason first we are getting output of Start and end
Js is synchronous and code execute line by line so firstly we get output as start and end.

-Start
-end

Than we will get ouput as timeout because in JS settimeout is handle by WebApi so than it will go into the queue event Loop is check that the callback queue is empty or not if stack is empty than eventloop send line by line whatever inside the Queue. tha's why we get output as timeout
-timeout

Promises are asynchronus process so they are inside the another thread so than JS Engine will take them into Microstack queue which handle the Promises.
so than inside callback we have callback settimeout they went into the queue and whenever the stack is empty event loop send them into the stack so we will get output as 

-Promise 3 resolved
-Promise 1 resolved
-Promise 2 resolved